// palindromo.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include "conio.h"
#include <iostream>
#include <string>

using namespace std;
int longitud ( string nombre);
int comparar ( string palabra, string palabra2);
int encontrar (string cadena, string k);
string subcadena (string nombre, int pos, int l); // pos es la poscision, 1 numero de caracteres
bool polidromo (string palabra);

void main()
{
	int pos, cont;
	char aux;
	string var1, var2, nombre; // declarar strings
	do(
		cout<<"   MENU    ";
		cout<<" 1.- Longitud "<< endl;
		cout<<" 2.- Comparar "<< endl;
		cout<<" 3.- Encontrar "<< endl;
		cout<<" 4.- Subcadena "<< endl;
		cout<<" 5.- Palindromo "<< endl;
		cout<<" 0.- Salir "<< endl;
		cin>> opc;
		switch(pos){
		case 1: cout<<" Ingresar la Cadena ";
			cin.ignore();
			getline (cin, var1); // es igual que cin
			cout<< " la cadena" << var1 << " es: " << aux;
			break;
		case 2: cin. ignore();
			cout<<" Ingresar la Cadena ";
			getline (cin, var1); // es igual que cin
			cout<<" Ingresar la Cadena ";
			getline (cin, var2); // es igual que cin
			if (comparar(var1,var2))
				cout<< " son iguales ";
			else
				cout<<" son diferentes";
			break;
		case 3: cout<<" Ingresar la Cadena ";
			getline (cin, var1); // es igual que cin
			cout<< " Ingresar la cadena a buscar";
			getline (cin, var2);
			if(pos==-1)
				cout<< " No esta la cadena dentro de la otra";
			else
				cout<< " Empieza en la posicion" << pos;
			break;
		case 4: cout<<" Ingresar la Cadena ";
			getline (cin, var1); // es igual que cin
			cout<<" Ingresar la posicion de devolver";
			cin>> pos;
			nombre=subcadena(var1, pos,l);
			cout<<" La subcadena en la posicion" << pos <<" es " << nombre;
			break;
		case 5: cout<<" Ingresar la Cadena ";
			getline (cin, var1); // es igual que cin
			if (polidromo(var1))
				cout<<" es un polidromo";
			else
				cout<<" no es";
			break;
		case 0: cout<< " Salir";
			break;

		default; cout<< " Error";
			break;
		{
		 cout<<endl;
		 }while(opc!=0);
		getch();		
}

int longitud ( string nombre){
	int aux1;
	aux1=nombre.length();
	return aux1;
}

bool comparar ( string palabra, string palabra2){
	bool aux;
	if(palabra.compare(palabra2)==0)
		aux=true;
	else
		aux=false;
	return aux;
}

int encontrar (string cadena, string k){
	int aux;
	aux=cadena.find(k);
	return aux;
}

string subcadena (string nombre, int pos, int l){
	string aux;
	aux=nombre.substr(pos,l);
	return ax
}

bool palindromo(string palabra){
	for(int i=0;i<palabra.length()/2;i++){
		if(palabra.at(i)!=palabra.at(palabra.length()-1-i))
			return false;
		}
	return true;
}



